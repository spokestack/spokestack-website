version: 2.1

executors:
  node:
    docker:
      - image: circleci/node:14
    working_directory: ~/spokestack.io
    resource_class: large

references:
  # To generate the required env var, run:
  # cat .env | base64 | pbcopy
  # and then paste that to Circle CI
  create_env: &create_env
    run:
      name: Create .env file for production environment
      command: echo $ENV | base64 -d > .env

  create_env_beta: &create_env_beta
    run:
      name: Create .env file for beta environment
      command: echo $ENV_BETA | base64 -d > .env

  restore_npm_cache: &restore_npm_cache
    restore_cache:
      keys:
        # when lock file changes, use increasingly general patterns to restore cache
        - npm-packages-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - npm-packages-v2-{{ .Branch }}-
        - npm-packages-v2-

  save_npm_cache: &save_npm_cache
    save_cache:
      paths:
        - node_modules/
      key: npm-packages-v2-{{ .Branch }}-{{ checksum "package-lock.json" }}

  restore_gatsby_cache: &restore_gatsby_cache
    restore_cache:
      keys:
        - gatsby-cache-v3-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - gatsby-cache-v3-{{ .Branch }}-
        - gatsby-cache-v3-

  save_gatsby_cache: &save_gatsby_cache
    save_cache:
      paths:
        - .cache/
        - public/
      key: gatsby-cache-v3-{{ .Branch }}-{{ checksum "package-lock.json" }}

jobs:
  build:
    executor: node
    steps:
      - checkout
      - *create_env_beta
      - *restore_npm_cache
      - run: npm install --no-save
      - *save_npm_cache

      - run:
          name: Run tests
          command: npm test

      # build the site
      - *restore_gatsby_cache
      - run:
          name: Run build
          command: npm run build
      - *save_gatsby_cache

  deploy_integration:
    executor: node
    steps:
      - checkout
      - *create_env_beta
      - *restore_npm_cache
      - run: npm install --no-save
      - *save_npm_cache

      - run:
          name: Run tests
          command: npm test

      # build the site with beta.spokestack.io
      - *restore_gatsby_cache
      - run:
          name: Run build
          command: npm run build
      - *save_gatsby_cache

      # upload to S3
      - run:
          name: Install Tools
          command: sudo apt-get -y -qq install awscli
      - run:
          name: Build and push static site
          command: npm run deploy
      - run:
          name: Enable cloudfront cli
          command: aws configure set preview.cloudfront true
      - run:
          name: Invalidate the cdn caches
          command: aws cloudfront create-invalidation --distribution-id E1VWEXJMB3URMJ --paths "/*"

  deploy_production:
    executor: node
    steps:
      - checkout
      - *create_env
      - *restore_npm_cache
      - run: npm install --no-save
      - *save_npm_cache

      - run:
          name: Run tests
          command: npm test

      # build the site with www.spokestack.io
      - *restore_gatsby_cache
      - run:
          name: Run build
          command: npm run build
      - *save_gatsby_cache

      # upload to S3
      - run:
          name: Install Tools
          command: sudo apt-get -y -qq install awscli
      - run:
          name: Build and push static site
          command: npm run deploy
      - run:
          name: Enable cloudfront cli
          command: aws configure set preview.cloudfront true
      - run:
          name: Invalidate the cdn caches
          command: aws cloudfront create-invalidation --distribution-id E3BUXJK1QMX4F5 --paths "/*"

workflows:
  version: 2

  test:
    jobs:
      - build:
          filters:
            branches:
              ignore:
                - develop
                - production
  deploy:
    jobs:
      - deploy_integration:
          filters:
            branches:
              only: develop
      - deploy_production:
          filters:
            branches:
              only: production
            tags:
              only:
                - /\d+\.\d+\.\d+/
